<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="15" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-02-17T08:56:59 CST" name="Loan Department" finished-at="2023-02-17T08:56:59 CST" duration-ms="121">
    <groups>
      <group name="smoke">
        <method signature="Demo2.testDemo()[pri:0, instance:test.Demo2@703580bf]" name="testDemo" class="test.Demo2"/>
        <method signature="Demo3.MobilesignoutCarLoan()[pri:0, instance:test.Demo3@6eda5c9]" name="MobilesignoutCarLoan" class="test.Demo3"/>
        <method signature="Demo4.MobileoginHomeLoan()[pri:0, instance:test.Demo4@40ef3420]" name="MobileoginHomeLoan" class="test.Demo4"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2023-02-17T08:56:59 CST" name="Home Loan" finished-at="2023-02-17T08:56:59 CST" duration-ms="102">
      <class name="test.Demo4">
        <test-method signature="MobileoginHomeLoan()[pri:0, instance:test.Demo4@40ef3420]" started-at="2023-02-17T08:56:59 CST" name="MobileoginHomeLoan" finished-at="2023-02-17T08:56:59 CST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileoginHomeLoan -->
        <test-method signature="WebLoginHomeLoan()[pri:0, instance:test.Demo4@40ef3420]" started-at="2023-02-17T08:56:59 CST" name="WebLoginHomeLoan" finished-at="2023-02-17T08:56:59 CST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebLoginHomeLoan -->
        <test-method signature="APILoginHomeLoan()[pri:0, instance:test.Demo4@40ef3420]" started-at="2023-02-17T08:56:59 CST" name="APILoginHomeLoan" finished-at="2023-02-17T08:56:59 CST" depends-on-methods="test.Demo4.MobileoginHomeLoan, test.Demo4.WebLoginHomeLoan" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APILoginHomeLoan -->
      </class> <!-- test.Demo4 -->
      <class name="test.Demo1">
        <test-method is-config="true" signature="firstSuite()[pri:0, instance:test.Demo1@4a22f9e2]" started-at="2023-02-17T08:56:59 CST" name="firstSuite" finished-at="2023-02-17T08:56:59 CST" duration-ms="14" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstSuite -->
        <test-method is-config="true" signature="lastSuite()[pri:0, instance:test.Demo1@4a22f9e2]" started-at="2023-02-17T08:57:00 CST" name="lastSuite" finished-at="2023-02-17T08:57:00 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastSuite -->
      </class> <!-- test.Demo1 -->
    </test> <!-- Home Loan -->
    <test started-at="2023-02-17T08:56:59 CST" name="Car Loan" finished-at="2023-02-17T08:56:59 CST" duration-ms="121">
      <class name="test.Demo3">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="beforeClass" finished-at="2023-02-17T08:56:59 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="MobilecheckoutCarLoan()[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="MobilecheckoutCarLoan" finished-at="2023-02-17T08:56:59 CST" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilecheckoutCarLoan -->
        <test-method signature="MobileloginCarLoan()[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="MobileloginCarLoan" finished-at="2023-02-17T08:56:59 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginCarLoan -->
        <test-method signature="MobilesigninarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="MobilesigninarLoan" data-provider="getData" finished-at="2023-02-17T08:56:59 CST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesigninarLoan -->
        <test-method signature="MobilesigninarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="MobilesigninarLoan" data-provider="getData" finished-at="2023-02-17T08:56:59 CST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesigninarLoan -->
        <test-method signature="MobilesigninarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="MobilesigninarLoan" data-provider="getData" finished-at="2023-02-17T08:56:59 CST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirddsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesigninarLoan -->
        <test-method signature="MobilesignoutCarLoan()[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="MobilesignoutCarLoan" finished-at="2023-02-17T08:56:59 CST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutCarLoan -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:test.Demo3@6eda5c9]" started-at="2023-02-17T08:56:59 CST" name="afterClass" finished-at="2023-02-17T08:56:59 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- test.Demo3 -->
    </test> <!-- Car Loan -->
    <test started-at="2023-02-17T08:56:59 CST" name="Personal Loan" finished-at="2023-02-17T08:56:59 CST" duration-ms="95">
      <class name="test.Demo2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.Demo2@703580bf]" started-at="2023-02-17T08:56:59 CST" name="prerequiste" finished-at="2023-02-17T08:56:59 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:test.Demo2@703580bf]" started-at="2023-02-17T08:56:59 CST" name="beforeMethod" finished-at="2023-02-17T08:56:59 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testDemo()[pri:0, instance:test.Demo2@703580bf]" started-at="2023-02-17T08:56:59 CST" name="testDemo" finished-at="2023-02-17T08:56:59 CST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDemo -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:test.Demo2@703580bf]" started-at="2023-02-17T08:56:59 CST" name="afterMethod" finished-at="2023-02-17T08:56:59 CST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="Demo()[pri:0, instance:test.Demo2@703580bf]" started-at="2023-02-17T08:56:59 CST" name="Demo" finished-at="2023-02-17T08:56:59 CST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
      </class> <!-- test.Demo2 -->
      <class name="test.Demo1">
        <test-method signature="test3()[pri:0, instance:test.Demo1@4a22f9e2]" started-at="2023-02-17T08:56:59 CST" name="test3" finished-at="2023-02-17T08:56:59 CST" duration-ms="21" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at test.Demo1.test3(Demo1.java:26)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
      </class> <!-- test.Demo1 -->
    </test> <!-- Personal Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
